# Copyright (c) 2020, CMCC Technologies Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Author: wutuo@chinamobile.com
open_cli_schema_version: 1.0
name: seagull-validation
description: |
  Exampleï¼š
  oclip --product onap-dublin seagull-validation --config-json '' --vm-ips '' --caps '' --test-times '' --instrument '' --protocol '' --mode ''

info:
  product: onap-dublin
  service: vnf-seagull
  author: wutuo@chinamobile.com

parameters:
  - name: config-json
    description: Configuration file
    type: string
    long_option: config-json
    is_optional: false
  - name: vm-ips
    description: string for seagull vm-ips
    type: string
    long_option: vm-ips
    is_optional: false
  - name: caps
    description: string for caps
    type: string
    long_option: caps
    is_optional: false
  - name: number-calls
    description: string for number-calls
    type: string
    long_option: number-calls
    is_optional: false
  - name: instrument
    description: string for DRA address
    type: string
    long_option: instrument
    is_optional: false
  - name: protocol
    description: string for protocol
    type: string
    default_value: diameter
    long_option: protocol
    is_optional: true
  - name: mode
    description: string for mode
    type: string
    long_option: mode
    is_optional: false
results:
  direction: portrait
  attributes:
    - name: data
      description: test case result
      scope: short
      type: string
cmd:
  command:
    -  python3 $s{env:OPEN_CLI_HOME}/script/seagull.py --vm-ips ${vm-ips} --caps ${caps} --test-times ${test-times} --instrument ${instrument} --protocol ${protocol} --mode ${mode} --result-json $s{tmp:result.json} --conf ${config-json}
  success_codes:
    - 0
  working_directory: .
  output: $s{tmp:result.json}
  result_map:
    file_name: $o{$.data}

